1.DataSourceの登録 
  tomcat/oracle の場合 
  (1) 環境
　　 　　　 DBCPは、Jakarta-Commonsのコンポーネントに依存している。
       * Jakarta-Commons DBCP
       * Jakarta-Commons Collections
       * Jakarta-Commons Pool
     　　　　これらのライブラリは、ひとつのJARファイルとして、$CATALINA_HOME/common/lib/naming-factory-dbcp.jar に置かれている。

  (2) JNDI DataSource を $CATALINA_HOME/conf/server.xml に記述する
	<Host ･･･ 
         <Resource name="jdbc/fugitive" 
                   auth="Container"
                   driverClassName="oracle.jdbc.OracleDriver" 
                   maxActive="20" maxIdle="10" 
                   maxWait="-1" 
                   password="1192" 
                   type="javax.sql.DataSource" 
                   url="jdbc:oracle:thin:@192.168.0.5:1521:xe" username="fugitive"/> 
                   
         <Resource name="jdbc/hr" 
                   auth="Container"
                   driverClassName="oracle.jdbc.OracleDriver" 
                   maxActive="20" maxIdle="10" 
                   maxWait="-1" 
                   password="north123" 
                   type="javax.sql.DataSource" 
                   url="jdbc:oracle:thin:@192.168.0.5:1521:xe" username="hr"/> 

            <!-- maxActive: Maximum number of dB connections in pool. Make sure you
                 configure your mysqld max_connections large enough to handle
                 all of your db connections. Set to 0 for no limit.
                 -->
            <!-- maxIdle: Maximum number of idle dB connections to retain in pool.
                 Set to -1 for no limit.  See also the DBCP documentation on this
                 and the minEvictableIdleTimeMillis configuration parameter.
                 -->
            <!-- maxWait: Maximum time to wait for a dB connection to become available
                 in ms, in this example 10 seconds. An Exception is thrown if
                 this timeout is exceeded.  Set to -1 to wait indefinitely.
                 -->
            <!-- username and password: MySQL dB username and password for dB connections  -->
            <!-- driverClassName: Class name for the old mm.mysql JDBC driver is
                 org.gjt.mm.mysql.Driver - we recommend using Connector/J though.
                 Class name for the official MySQL Connector/J driver is com.mysql.jdbc.Driver.
                 -->
            <!-- url: The JDBC connection url for connecting to your MySQL dB.
                 The autoReconnect=true argument to the url makes sure that the
                 mm.mysql JDBC Driver will automatically reconnect if mysqld closed the
                 connection.  mysqld by default closes idle connections after 8 hours.
                 -->
        </Context>
	</Host>
                   	
  (3) コード例
      (a) JSP + カスタムタグ
			<%@ taglib uri="http://java.sun.com/jstl/core_rt" prefix="c" %>
			<%@ taglib uri="http://java.sun.com/jsp/jstl/sql" prefix="sql" %>
	
			<sql:query var="rs" dataSource="jdbc/fugitive">
				select country_id, country_name from countries
			</sql:query>
			<html>
			<body>
			    <c:forEach var="row" items="${rs.rows}">
				    ${row.country_id} :
				    ${row.country_name}<br/>
			    </c:forEach>
			</body>
			</html>  
  　　　　　(b) Java
		    Context initContext = new InitialContext();
			Context envContext  = (Context)initContext.lookup("java:/comp/env");
			DataSource ds = (DataSource)envContext.lookup("jdbc/fugitive");
			Connection conn = ds.getConnection();
