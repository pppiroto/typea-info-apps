<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://cxf.apache.org/jaxrs
		http://cxf.apache.org/schemas/jaxrs.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-2.0.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
 	
	<jaxrs:server id="cityResourceService" address="/">
	    <jaxrs:serviceBeans>
	        <ref bean="cityResource" />
	    </jaxrs:serviceBeans>
	    <jaxrs:providers>
	    	<ref bean="cityWriter"/>
	    	<ref bean="cityReader"/>
	    	<ref bean="citiesWriter"/>
		</jaxrs:providers>
	</jaxrs:server>
	<bean id="cityDao" class="info.typea.sample.restservice.dao.CityDaoImpl"/>
	<bean id="cityResource" class="info.typea.sample.restservice.rs.CityResourceImpl">
		<property name="cityDao" ref="cityDao"/>
	</bean> 

	<!-- 
		URLエンコード/デコード をどこでするのが適当か？
	エンドポイントのReader/Writer で行うために、Cityについてプロバイダーを使用し、そこで行う
	 -->
	<bean id="jaxbContext" class="javax.xml.bind.JAXBContext" factory-method="newInstance">
		<constructor-arg>
			<list>
			     <value>info.typea.sample.restservice.entity.City</value>
			     <value>info.typea.sample.restservice.entity.Cities</value>
			</list>
		</constructor-arg>
	</bean>
	<bean id="cityReader" class="info.typea.sample.restservice.provider.CityReader" >
  		<property name="jaxbContext" ref="jaxbContext" />
  	</bean>
  	<bean id="cityWriter" class="info.typea.sample.restservice.provider.CityWriter" >
  		<property name="jaxbContext" ref="jaxbContext" />
  	</bean>
  	<bean id="citiesWriter" class="info.typea.sample.restservice.provider.CitiesWriter" >
  		<property name="jaxbContext" ref="jaxbContext" />
  	</bean>
	<!-- 
	Service のアノテーションから、@Produces(MediaType.APPLICATION_XML) 記述を削除、
	XMLへマーシャリングするクラスへ、@XmlAccessorType(XmlAccessType.PROPERTY) を付加(プロパティがXMLElementになる)
	することで、以下の、プロバイダーは基本不要(カスタムの場合実装) 、自動でXMLに変換される
	<jaxrs:server id="cityResourceService" address="/">
	    <jaxrs:serviceBeans>
	        <ref bean="cityResource" />
	    </jaxrs:serviceBeans>
	    <jaxrs:providers>
	    	<ref bean="cityWriter"/>
	    	<ref bean="cityReader"/>
	    	<ref bean="citiesWriter"/>
	    	<ref bean="completeListWriter"/>
	    </jaxrs:providers>
	</jaxrs:server>
	<bean id="jaxbContext" class="javax.xml.bind.JAXBContext" factory-method="newInstance">
		<constructor-arg>
			<list>
			     <value>info.typea.sample.restservice.entity.City</value>
			     <value>info.typea.sample.restservice.entity.Cities</value>
			     <value>info.typea.sample.restservice.dto.CompleteList</value>
			</list>
		</constructor-arg>
	</bean>
	<bean id="cityReader" class="info.typea.sample.restservice.provider.CityReader" >
  		<property name="jaxbContext" ref="jaxbContext" />
  	</bean>
  	<bean id="cityWriter" class="info.typea.sample.restservice.provider.CityWriter" >
  		<property name="jaxbContext" ref="jaxbContext" />
  	</bean>
  	<bean id="citiesWriter" class="info.typea.sample.restservice.provider.CitiesWriter" >
  		<property name="jaxbContext" ref="jaxbContext" />
  	</bean>
  	<bean id="completeListWriter" class="info.typea.sample.restservice.provider.CompleteListWriter" >
  		<property name="jaxbContext" ref="jaxbContext" />
  	</bean>
   -->
</beans>
